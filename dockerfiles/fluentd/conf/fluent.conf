################################
#
# ROUTUNG
#
################################

<source>
  @type forward
  port 24224
  bind 0.0.0.0
</source>



################################
#
# FILTERING
#
################################

# kibana, step 1
# parse the JSON field -- by default, kibana outputs the logs in JSON format
#
<filter es.kibana>
  @type parser
  key_name log
  reserve_data true
  remove_key_name_field true
  inject_key_prefix log.json.
  <parse>
    @type json
  </parse>
</filter>


# kibana, step 2
# merge multiple JSON values
#
# TODO: ${record["log.json.tags"]} -- json array needs parsing
<filter es.kibana>
  @type record_transformer
#  auto_typecast true
#  unescape_key true
  <record>
    log ${record["log.json.@timestamp"]} -- ${record["log.json.tags"]} @ ${record["log.json.pid"]} -- ${record["log.json.message"]}
  </record>
</filter>



################################
#
# PRE-OUTPUT -- tag rewrite
#
################################

# filtering the messages from postgres databases
#
<match *.pg.*>
  @type rewrite_tag_filter

  # filter LOG-tagged messages from postgres driver
  <rule>
    key log
    pattern LOG
    tag info.${tag}
  </rule>

  <rule>
    key source
    pattern stderr
    tag error.${tag}
  </rule>
  <rule>
    key source
    pattern stdout
    tag info.${tag}
  </rule>
</match>


# filtering messages from java cogstack engine
#
<match cog.java.*>
  @type rewrite_tag_filter
  <rule>
    key source
    pattern stderr
    tag error.${tag}
  </rule>
  <rule>
    key source
    pattern stdout
    tag info.${tag}
  </rule>
</match>


# filtering messages from the rest of ES stack
#
<match es.*>
  @type rewrite_tag_filter
  <rule>
    key source
    pattern stderr
    tag error.${tag}
  </rule>
  <rule>
    key source
    pattern stdout
    tag info.${tag}
  </rule>
</match>


# filtering messages from www: nginx + web, ...
#
<match www.*>
  @type rewrite_tag_filter
  <rule>
    key source
    pattern stderr
    tag error.${tag}
  </rule>
  <rule>
    key source
    pattern stdout
    tag info.${tag}
  </rule>
</match>



################################
#
# OUTPUT -- file + stdout
#
################################

# error -- printing messages to stdout + file
#
<match error.**>
  @type copy

  <store>
    @type stdout
    format csv
    fields time, container_name,log
    force_quotes false
    delimiter \t

    time_key time
    time_format "%Y-%m-%d %H:%M:%S"
    include_time_key true
    localtime true
  </store>

  <store>
    @type file
    format json
    path /fluentd/log/${tag}
    append true

    localtime true
    include_time_key true
    time_key time
    time_format "%Y-%m-%d %H:%M:%S"
    time_slice_format %Y%m%dT%H%M

    <buffer tag, time>
      timekey 24h             # chunks per hour
      timekey_wait 5m         # 5mins delay for flush
      flush_at_shutdown true
    </buffer>

  </store>

</match>


# full log -- printing messages to file
#
<match info.**>
  @type copy

  <store>
    @type file
    format json
    path /fluentd/log/full.${tag}
    append true

    localtime true
    include_time_key true
    time_key time
#    time_format "%Y-%m-%d---%H:%M:%S"
    time_format "%Y-%m-%d %H:%M:%S"
    time_slice_format %Y%m%dT%H%M

    <buffer tag, time>
      timekey 1h              # chunks per hour
      timekey_wait 5m         # 5mins delay for flush
      flush_at_shutdown true
    </buffer>

#    compress gzip
  </store>

</match>
