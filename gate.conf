# EXAMPLE CONFIG FOR gateJob 
elasticsearch.cluster.name = elasticsearch
elasticsearch.cluster.host =  172.17.0.1
elasticsearch.cluster.port = 9300
elasticsearch.shield.enabled = false
elasticsearch.shield.user = admin:admin1
elasticsearch.shield.ssl.keystore.path = /home/rich/elk/ssh-keystores/tempnode/tempnode.jks
elasticsearch.shield.ssl.keystore.password = 111111
elasticsearch.shield.ssl.truststore.path = /home/rich/elk/ssh-keystores/tempnode/tempnode.jks
elasticsearch.shield.ssl.truststore.password = 111111
elasticsearch.shield.transport.ssl = true
elasticsearch.index.name = test_index2
elasticsearch.type = test_type
elasticsearch.response.timeout = 1000000
#do not index these fields if detected
elasticsearch.excludeFromIndexing = body
elasticsearch.processedFieldName = output

datePatternForES = yyyy-MM-dd'T'HH:mmZ
# GateConfig
# Gate Home Dir for loading plugins
gateHome    = /home/rich/GATE_Developer_8.1
# number of pipelines to load
poolSize    = 4
# target gapp or xgapp for pipeline
gateApp     = /home/rich/GATE_Developer_8.1/plugins/ANNIE/ANNIE_with_defaults.gapp
# comma separated Annotation Sets to extract. Exclude for for all (note, currently JSON output only)
gateAnnotationSets = Person

# DB field names for GateDoc metadata (JSON only)
#otherFieldsList = srcColumnFieldName,srcTableName,primaryKeyFieldName,primaryKeyFieldValue,updateTime,xhtml
# Text field name to form document body
textFieldName = input
#export as JSON instead of GATE XML?
gateJSON = false
##JMS config
jmsIP = tcp://172.17.0.3:61616?jms.prefetchPolicy.all=1
jmsUsername = admin
jmsPassword = your_password

elasticsearch.cluster.name = elasticsearch
elasticsearch.cluster.host =  172.17.0.1
elasticsearch.cluster.port = 9300
elasticsearch.shield.enabled = false
elasticsearch.shield.user = admin:admin1
elasticsearch.shield.ssl.keystore.path = /home/rich/elk/ssh-keystores/tempnode/tempnode.jks
elasticsearch.shield.ssl.keystore.password = 111111
elasticsearch.shield.ssl.truststore.path = /home/rich/elk/ssh-keystores/tempnode/tempnode.jks
elasticsearch.shield.ssl.truststore.password = 111111
elasticsearch.shield.transport.ssl = true
elasticsearch.index.name = test_index2
elasticsearch.type = test_type
elasticsearch.response.timeout = 1000000
#do not index these fields if detected
elasticsearch.excludeFromIndexing = body
elasticsearch.processedFieldName = output

datePatternForES = yyyy-MM-dd'T'HH:mmZ
# commit interval in step
chunkSize = 500
skipLimit = 0
useTimeStampBasedScheduling = false

#Asynchonous TaskExecutor Thread pool size
concurrencyLimit = 3

# DB field names for metadata
srcTableName = srctablename
srcColumnFieldName = srcColumnFieldName
primaryKeyFieldName = primaryKeyFieldName
primaryKeyFieldValue = primaryKeyFieldValue
timeStamp = updateTime

## scheduling (Cron style syntax)
scheduler.rate = "*/5 * * * * *"
#ms to scan forward for new data, from last successful job
processingPeriod = 3456000000
#Specify a start timestamp in ms, for restarting at a given point
#firstJobStartDate =

## Total timeout for complete job (set high for long running jobs!)
jobTimeout = 1000000000
## POSTGRES TARGET DB CONFIGURATIONS
target.JdbcPath      = jdbc:postgresql://172.17.0.2:5432/minicogs
target.Driver        = org.postgresql.Driver
target.username      = postgres
target.password      = mysecretpassword

## SOURCE TARGET DB CONFIGURATIONS
source.JdbcPath      = jdbc:postgresql://172.17.0.2:5432/minicogs
source.Driver        = org.postgresql.Driver
source.username      = postgres
source.password      = mysecretpassword

datePatternForScheduling = yyyy-MM-dd HH:mm:ss.S
dbmsToJavaSqlTimestampType = TIMESTAMP



## Job and step name
jobName =   gateJob
stepName = gateSlaveStep

# GATE IO queries
target.Sql           = INSERT INTO tblOutputDocs (srcColumnFieldName, srcTableName, primaryKeyFieldName, primaryKeyFieldValue, updateTime,  output) VALUES (:srcColumnFieldName, :srcTableName, :primaryKeyFieldName, CAST ( :primaryKeyFieldValue AS integer) , :timeStamp,  :outputData)
## Currently not used
#target.validationQuery = SELECT * FROM tblOutputDocs
#target.validationQueryFields = srcColumnFieldName,srcTableName,primaryKeyFieldName,primaryKeyFieldValue,updateTime
## paging item reader gate
source.selectClause = SELECT srcColumnFieldName, srcTableName, primaryKeyFieldName, primaryKeyFieldValue, updateTime,  input
source.sortKey = primaryKeyFieldValue
##paging item reader
source.pageSize = 2
source.fromClause = FROM tblInputDocs 

#for partitioning
#if the step target table has a different alias to the partition table
columntoProcess = primaryKeyFieldValue
#this is the table containing the primary keys and timestamps
tableToPartition = tblInputDocs
columntoPartition = primaryKeyFieldValue
#number of partitions
gridSize = 4
##message server queue names
requestQueueName = gateReqChannel
replyQueueName = gateReplyQueue

##needed for some dbms
#partitionerPreFieldsSQL =
#partitionerPostOrderByClause = limit 10
processingPeriod = 345600000
## for build/integration testing
spring.profiles.active=gate,master,slave