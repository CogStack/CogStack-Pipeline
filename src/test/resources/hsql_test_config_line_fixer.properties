## HSQL TARGET DB CONFIGURATIONS
target.JdbcPath      = jdbc:hsqldb:hsql://localhost:9002/test2
target.Driver        = org.hsqldb.jdbcDriver
target.Sql           = INSERT INTO tblOutputDocs (DOC_ID, LINE_TEXT_CONCAT)  VALUES (CAST(:documentKey AS integer) , :lineContents)
target.validationQuery = SELECT count(*) FROM tblOutputDocs
## HSQL SOURCE DB CONFIGURATIONS
source.JdbcPath      = jdbc:hsqldb:hsql://localhost:9001/test
source.Driver        = org.hsqldb.jdbcDriver
## paging item reader line fixer
source.selectClause = SELECT distinct doc_id
source.sortKey = doc_id




chunkSize = 5
concurrencyLimit = 2
fetchSize = 100
maxRows = 100
throttleLimit = 4


##paging item reader
source.pageSize = 2
source.fromClause = FROM tblInputDocs 

#for DBLineFixer
documentKeyName = doc_id
lineKeyName = line_id
lineContents = line_text
tableName = tblinputdocs

#for partitioning with lineFixer
columntoPartition = doc_id
tableToPartition = tblInputDocs


##Configure partitionHandler
gridSize = 4
partitionHandlerTimeout = 100000
stepName = dbLineFixerSlaveStep
replyChannel = 
jmsIP = tcp://172.17.0.3:61616
jmsUsername = admin
jmsPassword = your_password

spring.profiles.active=dBLineFixer
#example launch 
#java -cp "target/dependency-jars/*:target/your-project.jar" 
#org.springframework.batch.core.launch.support.CommandLineJobRunner 
#spring/batch/jobs/job-read-files.xml dBLineFixerJob date=testing.cvs