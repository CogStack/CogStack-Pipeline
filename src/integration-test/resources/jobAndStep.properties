#####JOB AND STEP CONFIGURATION####
# commit interval in step
chunkSize = 50
#number of exceptions that can be thrown before job fails.
skipLimit = 5

#Asynchonous TaskExecutor Thread pool size - for multithreading partitions
concurrencyLimit = 4

# DB column label mapping for metadata
srcTableName = srctablename
srcColumnFieldName = srcColumnFieldName
primaryKeyFieldName = primaryKeyFieldName
primaryKeyFieldValue = primaryKeyFieldValue
timeStamp = updateTime

#job should complete before this many ms or it will fail
jobTimeout = 10000000

#since some JDBC drivers don't support socket timeouts, they can't detect network failures.
#This workaround allows us to specify a global socket timeout for the JVM without diving into the OS socket configuration.
#However, the downside is that all sockets are affected in the JVM, so may not always be appropriate to set this. Comment out to
#not use this global setting
globalSocketTimeout = 30000

# the shutdownTimeout is the number of milliseconds the job should wait for
# the job to shut down correctly in the event of a manual stop. This timeout should be
# long enough for the current step to complete, so that other steps can be notified
# of the 'job stop' attempt and the job repository can be correctly updated.
# However, if the job hangs for unknown reasons, it's likely impossible to update the
# job repository successfully, meaning the current jobExecution will be in an unknown state.
shutdownTimeout = 600000

#number of partitions to generate
gridSize = 3

#ms for partition handler to complete partitioning before an exception is thrown
partitionHandlerTimeout = 10000000

#name of timestamp colum used for checking for new data
timeStampColumnNameToPersistInJobRepository = updateTime

#ms to scan forward for new data
#processingPeriod = 345600000

#if configured, overrides the grid size and sets the max number of rows per partition.
#Warning - if used, can result in large numbers of partitions per job
maxPartitionSize = 1000

#if configured, queries the source database to ensure that each partition has at least 1 row of data.
#Helpful to avoid masses of empty partitions when connecting to a database with non-sequestial primary keys. However, also
#requires a count query to be performed, which might not always be desirable
#checkForEmptyPartitions = false