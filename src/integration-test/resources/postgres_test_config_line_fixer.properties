## Job and step Name
jobName =   dBLineFixerJob

# line fixer IO queries
target.Sql           = INSERT INTO tblOutputDocs (srcColumnFieldName, srcTableName, primaryKeyFieldName, primaryKeyFieldValue, updateTime,  LINE_TEXT_CONCAT) VALUES (:srcColumnFieldName, :srcTableName, :primaryKeyFieldName, CAST( :primaryKeyFieldValue AS integer) , :timeStamp,  :outputData)
#currently not used
target.validationQuery = SELECT * FROM tblOutputDocs

## paging item reader line fixer
source.selectClause = SELECT distinct srcColumnFieldName, srcTableName, primaryKeyFieldName,  primaryKeyFieldValue , updateTime
source.sortKey = primaryKeyFieldValue
##paging item reader
source.pageSize = 2
source.fromClause = FROM tblInputDocs 

#for partitioning
#if the step target table has a different alias to the partition table
columnToProcess = primaryKeyFieldValue
#this is the table containing the primary keys and timestamps
tableToPartition = tblInputDocs
pkColumnNameToPartition = primaryKeyFieldValue
timeStampColumnNameToPersistInJobRepository = updateTime

##Configure partitionHandler
gridSize = 4
partitionHandlerTimeout = 100000
requestQueueName = lineFixerReqChannel
replyQueueName = lineFixerReplyQueue
##needed for some dbms
#partitionerPreFieldsSQL =
#partitionerPostOrderByClause = limit 10


