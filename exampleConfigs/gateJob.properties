# EXAMPLE CONFIG FOR gateJob 
elasticsearch.cluster.name = kch-analytics-cluster
elasticsearch.cluster.host =  127.0.0.1
elasticsearch.cluster.port = 9300
elasticsearch.shield.enabled = false
elasticsearch.shield.user = <user>:<password>
elasticsearch.shield.ssl.keystore.path = /home/rich/elk/ssh-keystores/tempnode/tempnode.jks
elasticsearch.shield.ssl.keystore.password = <password>
elasticsearch.shield.ssl.truststore.path = /home/rich/elk/ssh-keystores/tempnode/tempnode.jks
elasticsearch.shield.ssl.truststore.password = <password>
elasticsearch.shield.transport.ssl = true
elasticsearch.index.name = test_index2
elasticsearch.type = test_type
elasticsearch.response.timeout = 1000000
#do not index these fields if detected
elasticsearch.excludeFromIndexing = binaryContent

datePatternForES = yyyy-MM-dd'T'HH:mm:ss.SSS
# GateConfig
# Gate Home Dir for loading plugins
gateHome    = /home/rich/GATE_Developer_8.1
# number of pipelines to load
poolSize    = 4
# fieldname for gate output
gateFieldName = gate

# target gapp or xgapp for pipeline
gateApp     = /home/rich/GATE_Developer_8.1/plugins/ANNIE/ANNIE_with_defaults.gapp
# comma separated Annotation Sets to extract. Exclude for for all (note, currently JSON output only)
gateAnnotationSets = Person
# DB field names for GateDoc metadata (JSON only)
#otherFieldsList = srcColumnFieldName,srcTableName,primaryKeyFieldName,primaryKeyFieldValue,updateTime,xhtml
# Text field name to form document body
gateInputFieldName = input
#export as JSON instead of GATE XML?
gateJSON = false
#select profiles to activate various ItemProcessor/ItemWriter Beans
spring.profiles.active=gate,master,slave,jdbc,elasticsearch,primaryKeyPartition
##JMS config
jmsIP = tcp://172.17.0.3:61616?jms.prefetchPolicy.all=1
jmsUsername = admin
jmsPassword = your_password

# commit interval in step
chunkSize = 50
skipLimit = 0


#Asynchonous TaskExecutor Thread pool size
concurrencyLimit = 4

# DB field names for metadata
srcTableName = srctablename
srcColumnFieldName = srcColumnFieldName
primaryKeyFieldName = primaryKeyFieldName
primaryKeyFieldValue = primaryKeyFieldValue
timeStamp = updateTime

jobTimeout = 10000
#JTDS now obsolete due to JDBC4.0
### SQL SERVER TARGET DB CONFIGURATIONS
#target.JdbcPath      = jdbc:jtds:sqlserver://192.168.1.7:1433/minicogs
#target.Driver        = net.sourceforge.jtds.jdbc.Driver
#target.username      = sqlserver
#target.password      = mysecretpassword
#target.connectionValidationQuery = SELECT CASE WHEN DATABASEPROPERTYEX('minicogs', 'Status') = 'ONLINE' THEN 1 END
#
### SOURCE TARGET DB CONFIGURATIONS
#source.JdbcPath      = jdbc:jtds:sqlserver://192.168.1.7:1433/minicogs
#source.Driver        = net.sourceforge.jtds.jdbc.Driver
#source.username      = sqlserver
#source.password      = mysecretpassword
#source.connectionValidationQuery = SELECT CASE WHEN DATABASEPROPERTYEX('minicogs', 'Status') = 'ONLINE' THEN 1 END

## SQL SERVER TARGET DB CONFIGURATIONS
target.JdbcPath      = jdbc:sqlserver://192.168.1.110:1433;DatabaseName=minicogs
target.Driver        = com.microsoft.sqlserver.jdbc.SQLServerDriver
target.username      = sqlserver
target.password      = mysecretpassword
target.idleTimeout   = 30000
target.maxLifetime   = 60000

## SOURCE TARGET DB CONFIGURATIONS
source.JdbcPath      = jdbc:sqlserver://192.168.1.110:1433;DatabaseName=minicogs
source.Driver        = com.microsoft.sqlserver.jdbc.SQLServerDriver
source.username      = sqlserver
source.password      = mysecretpassword
source.idleTimeout   = 30000
source.maxLifetime   = 60000

#JobRepo DB config
jobRepository.JdbcPath      = jdbc:sqlserver://192.168.1.110:1433;DatabaseName=jobrepo
jobRepository.Driver        = com.microsoft.sqlserver.jdbc.SQLServerDriver
jobRepository.username      = sqlserver
jobRepository.password      = mysecretpassword
jobRepository.idleTimeout   = 30000
jobRepository.maxLifetime   = 60000

datePatternForScheduling = yyyy-MM-dd HH:mm:ss.S
dbmsToJavaSqlTimestampType = DATETIME



## Job and step name
jobName =   gateJob

# GATE IO queries
target.Sql           = INSERT INTO tblOutputDocs (srcColumnFieldName, srcTableName, primaryKeyFieldName, primaryKeyFieldValue, updateTime,  output) VALUES (:srcColumnFieldName, :srcTableName, :primaryKeyFieldName, CAST ( :primaryKeyFieldValue AS integer) , :timeStamp,  :outputData)
## Currently not used
#target.validationQuery = SELECT * FROM tblOutputDocs
#target.validationQueryFields = srcColumnFieldName,srcTableName,primaryKeyFieldName,primaryKeyFieldValue,updateTime
## paging item reader gate
source.selectClause = SELECT srcColumnFieldName, srcTableName, primaryKeyFieldName, primaryKeyFieldValue, updateTime,  input
source.sortKey = primaryKeyFieldValue
##paging item reader
source.pageSize = 2
source.fromClause = FROM dbo.tblInputDocs

#for partitioning
#if the step target table has a different alias to the partition table
columnToProcess = primaryKeyFieldValue
#this is the table containing the primary keys and timestamps
tableToPartition = tblInputDocs
pkColumnNameToPartition = primaryKeyFieldValue
timeStampColumnNameToPersistInJobRepository = updateTime


#number of partitions
gridSize = 4
partitionHandlerTimeout = 10000000
##message server queue names
requestQueueName = gateReqChannel
replyQueueName = gateReplyQueue
partitionerPreFieldsSQL = TOP 100 PERCENT

##needed for some dbms
#partitionerPreFieldsSQL =
#partitionerPostOrderByClause = limit 10
processingPeriod = 345600000