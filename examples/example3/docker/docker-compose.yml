version: '2.0'

#---------------------------------------------------------------------------#
# Used services                                                             #
#---------------------------------------------------------------------------#
services:

#---------------------------------------------------------------------------#
# Postgres containers for input data                                        #
#---------------------------------------------------------------------------#
  pgsynsamples:
    image: postgres:10.4-alpine
    # use this when exceeding the max connections of postgres
#    command: "-c 'shared_buffers=256MB' -c 'max_connections=1000'"
    volumes:
      - ./db_dump/db_samples-syn.sql.gz:/data/db_samples.sql.gz:ro
      - ./common/pgsamples/init_db.sh:/docker-entrypoint-initdb.d/init_db.sh:ro
      - pgsyndata:/var/lib/postgresql/data
    ports:
      # <host:container> expose the postgres DB to host for debugging purposes
      - "5555:5432"

  pgmtsamples:
    image: postgres:10.4-alpine
    volumes:
      - ./db_dump/db_samples-mt.sql.gz:/data/db_samples.sql.gz:ro
      - ./common/pgsamples/init_db.sh:/docker-entrypoint-initdb.d/init_db.sh:ro
      - pgmtdata:/var/lib/postgresql/data
    ports:
      - "5556:5432"

#---------------------------------------------------------------------------#
# Postgres container for spring batch / cogstack testing                    #
# TODO: fix password management
#---------------------------------------------------------------------------#
  postgres:
    image: postgres:9.6-alpine
    volumes:
      - ./common/postgres/create_repo.sh:/docker-entrypoint-initdb.d/create_repo.sh:ro
      - pgdata:/var/lib/postgresql/data
    ports:
      - 5432

#---------------------------------------------------------------------------#
# CogStack containers                                                       #
#---------------------------------------------------------------------------#
  cogstack:
    image: cogstacksystems/cogstack-pipeline:latest
    volumes:
      - ./cogstack/:/usr/src/docker-cogstack/cogstack/cogstack_conf:ro
    environment:
      - LOG_LEVEL=info
      - FILE_LOG_LEVEL=off
    depends_on:
      - pgsynsamples
      - pgmtsamples
      - postgres
      - elasticsearch

#---------------------------------------------------------------------------#
# Elasticsearch cluster                                                     #
#---------------------------------------------------------------------------#
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
    environment:
      - cluster.name=docker-cluster
#      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    depends_on:
      - postgres
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
      - ./common/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - "9200:9200"

#---------------------------------------------------------------------------#
# Kibana webapp                                                             #
#---------------------------------------------------------------------------#
  kibana:
    image: docker.elastic.co/kibana/kibana:6.2.4
    depends_on:
      - elasticsearch
    volumes:
      - ./common/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro 
    ports:
      - "5601:5601"


#---------------------------------------------------------------------------#
# Docker named volumes                                                      #
#---------------------------------------------------------------------------#
volumes:
  esdata1:
    driver: local
  pgsyndata:
    driver: local
  pgmtdata:
    driver: local
  pgdata:
    driver: local
